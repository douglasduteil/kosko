name: Test
on:
  push:
  pull_request:

env:
  PNPM_CACHE_FOLDER: .pnpm-store
  PNPM_VERSION: 5.17.2
  HELM_VERSION: 3.5.3

jobs:
  lint:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 14.x
      - uses: actions/cache@v2
        with:
          path: ${{ env.PNPM_CACHE_FOLDER }}
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-
      - uses: pnpm/action-setup@v1.2.1
        with:
          version: ${{ env.PNPM_VERSION }}
      - name: Set pnpm store dir
        run: pnpm config set store-dir ${{ env.PNPM_CACHE_FOLDER }}
      - name: Install dependencies
        run: pnpm install
      - name: Build packages
        run: pnpm run build
      - name: Lint files
        run: pnpm run lint
  test:
    runs-on: ${{ matrix.os }}
    needs:
      - lint
    strategy:
      matrix:
        node-version: [10.x, 12.x, 14.x]
        os: [ubuntu-20.04, windows-latest]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - uses: actions/cache@v2
        with:
          path: ${{ env.PNPM_CACHE_FOLDER }}
          key: ${{ runner.os }}-pnpm-${{ matrix.node-version }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-${{ matrix.node-version }}-
      - uses: pnpm/action-setup@v1.2.1
        with:
          version: ${{ env.PNPM_VERSION }}
      - name: Set pnpm store dir
        run: pnpm config set store-dir ${{ env.PNPM_CACHE_FOLDER }}
      - name: Install dependencies
        run: pnpm install
      - name: Build packages
        run: pnpm run build
      # https://github.com/actions/virtual-environments/issues/712#issuecomment-613004302
      - name: Set TEMP on Windows
        run: echo "TEMP=$env:USERPROFILE\AppData\Local\Temp" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        if: ${{ runner.os == 'Windows' }}
      - name: Install Helm on Linux
        run: curl -fsSL https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash --version v${{ env.HELM_VERSION }}
        if: ${{ runner.os != 'Windows' }}
      - name: Install Helm on Windows
        run: |
          Invoke-WebRequest https://get.helm.sh/helm-v${{ env.HELM_VERSION }}-windows-amd64.zip -OutFile $env:TEMP\helm.zip
          Expand-Archive $env:TEMP\helm.zip -DestinationPath $env:TEMP\helm
          Move-Item -Path $env:TEMP\helm\windows-amd64\helm.exe -Destination C:\Windows\helm.exe
        if: ${{ runner.os == 'Windows' }}
      - name: Run unit tests
        run: pnpm run test:unit -- --coverage
      - name: Run integration tests
        run: pnpm run test:integration
      - uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
  test-browser:
    runs-on: ubuntu-20.04
    needs:
      - lint
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 14.x
      - uses: actions/cache@v2
        with:
          path: ${{ env.PNPM_CACHE_FOLDER }}
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-
      - uses: pnpm/action-setup@v1.2.1
        with:
          version: ${{ env.PNPM_VERSION }}
      - name: Set pnpm store dir
        run: pnpm config set store-dir ${{ env.PNPM_CACHE_FOLDER }}
      - name: Install dependencies
        run: pnpm install
      - name: Build packages
        run: pnpm run build
      - name: Run browser tests
        run: pnpm run test:browser
  test-deno:
    runs-on: ${{ matrix.os }}
    needs:
      - lint
    strategy:
      matrix:
        os: [ubuntu-20.04, windows-latest]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 14.x
      - uses: denoland/setup-deno@main
        with:
          deno-version: v1.x
      - uses: actions/cache@v2
        with:
          path: ${{ env.PNPM_CACHE_FOLDER }}
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-
      - uses: pnpm/action-setup@v1.2.1
        with:
          version: ${{ env.PNPM_VERSION }}
      - name: Set pnpm store dir
        run: pnpm config set store-dir ${{ env.PNPM_CACHE_FOLDER }}
      - name: Install dependencies
        run: pnpm install
      - name: Build packages
        run: pnpm run build
      - name: Run Deno tests
        run: pnpm run test:deno
